function getCookie (name) {
  var matches = document.cookie.match(new RegExp(
    "(?:^|; )" + name.replace(/([.$?*|{}()\[\]\\\/+^])/g, '\\$1') + "=([^;]*)"
  ));
  return matches ? decodeURIComponent(matches[1]) : undefined
}






function setCookie (name, value, props) {
  props = props || {};

  var exp = props.expires;

  if (typeof exp === "number" && exp) {
    var d = new Date();
    d.setTime(d.getTime() + exp * 1000);
    exp = props.expires = d;
  }

  if (exp && exp.toUTCString) {
    props.expires = exp.toUTCString()
  }

  value = encodeURIComponent(value);

  var updatedCookie = name + "=" + value;

  for (var propName in props) {
    if (props.hasOwnProperty(propName)) {
      updatedCookie += "; " + propName;
      var propValue = props[propName];
      if (propValue !== true) {
        updatedCookie += "=" + propValue;
      }
    }
  }

  document.cookie = updatedCookie;
}


function Form () {
  var T = this;
  this.button = '.submit,input[type="submit"]';
  this.message = '.form__messages';
  this.error = '.form__err';
  this.inputs = 'input, select, textarea';
  this.hasErrorClass = '.has-error';
  this.hasSuccessClass = '.has-success';
  this.excludes = 'input[type=radio],input[type=hidden],input[type=submit],input[type=image],input[type=button]';

  this.populateDataAjaxForm = function (form) {
    var data = {};
    $(T.inputs, form).each(function () {
      if ($(this).attr('type') === 'checkbox' || $(this).attr('type') === 'radio') {
        if ($(this).is(':checked')) {
          data[$(this).attr('name')] = $(this).val();
        }

      } else if (typeof ($(this).attr('name')) !== 'undefined') {
        data[$(this).attr('name')] = $(this).val();
      }
    });
    return data;
  };

  this.clearFormErrors = function (form) {
    $(T.error, form).html('');
    $(T.hasErrorClass, form).removeClass(this.hasErrorClass.substr(1));
  };

  this.setFormSuccess = function (form, message) {
    T.clearFormErrors(form);
    if (typeof (message) === 'string') {
      $(T.message, form).addClass('success').removeClass('failure').html(message).fadeIn(200);
    }
  };

  this.setFormErrors = function (form, errors) {
    T.clearFormErrors(form);
    $(T.inputs, form).each(function () {
      var name = $(this).attr('name'),
        line = $(this).parent();

      if (name && name in errors) {
        if (errors.hasOwnProperty(name)) {
          var error = errors[name].join(';');
          delete errors[name];

          if (line) {
            line.addClass(T.hasErrorClass.substr(1))
              .find('>' + T.error).html(error);
          }
        }
      } else {
        line = $(this).parent();
        line.addClass(T.hasSuccessClass.substr(1))
          .find('>' + T.error).html('');
      }
    });

    if (errors) {
      var error = [];
      for (var i in errors) {
        if (errors.hasOwnProperty(i)) {
          error.push(errors[i].join(';'));
        }
      }
      error = error.join('<br/>');
      $(T.message, form).removeClass('success').addClass('failure').html(error).fadeIn(200);
    }
  };

  this.clearFormValues = function (form) {
    $(T.inputs, form).not(T.excludes).val('');
    $('.checkbox input', form).val('0');
    $('input[type=radio]', form).removeAttr('checked');
    $('.uk-margin', form).removeClass('input--filled has-error has-success');
  };

  this.manageForm = function (formCont, callback, clearOnSuccess) {
    callback = typeof (callback) === 'undefined' ? function () {
    } : callback;
    clearOnSuccess = typeof (clearOnSuccess) === 'undefined' ? true : clearOnSuccess;
    formCont = $(formCont);
    $(T.button, formCont).click(function (e) {
      e.preventDefault();
      var inactive = $(this).hasClass('inactive');
      if (typeof (inactive) === 'undefined' || !inactive) {
        $(this).parents('form').submit();
      }
      return false;
    });

    $(formCont).submit(function (e) {
      e.preventDefault();
      var form = $(this);
      $(T.button, form).data('inactive', true).addClass('inactive');
      $(T.message, form).fadeOut(160);
      T.clearFormErrors(form);
      var data = T.populateDataAjaxForm(form);

      var onSuccess = function (data) {
        if (data['status'] === 'ok') {
          if (clearOnSuccess) {
            T.clearFormValues(form);
          }
          T.setFormSuccess(form, data['detail']);
          callback(data);
        } else {
          T.setFormErrors(form, data['detail']['errors']);
        }
        $(T.button, form).data('inactive', false).removeClass('inactive');
      };

      var formData = new FormData(formCont[0]);

      if (formCont.find('[type="file"]')) {
        data = formData
      }

      $.ajax({
        url: form.attr('action'),
        data: data,
        dataType: 'json',
        crossDomain: true,
        cache: false,
        processData: false,
        contentType: false,
        type: 'POST',
        timeout: 60000,  // 1 min
        success: onSuccess,
        error: function (jqXHR, textStatus) {
          if (jqXHR.status > 400) {
            console.log(textStatus + ' ' + jqXHR.status + ': ' + jqXHR.statusText);

            if (jqXHR.statusText) {
              T.setFormErrors(form, { 'Server error': [jqXHR.statusText] });
            }
            $(T.button, form).data('inactive', false).removeClass('inactive');
          } else if (jqXHR.status === 400) {
            onSuccess(jqXHR.responseJSON);
          }
        }
      });
      /* AMO.CRM */
      var dat = { _ga: getCookie('_ga'), _ym_d: getCookie('_ym_d'), uc_referrer: getCookie('_uc_referrer'), uc_utm_campaign: getCookie('_uc_utm_campaign'), uc_utm_content: getCookie('_uc_utm_content'), uc_utm_medium: getCookie('_uc_utm_medium'), uc_utm_source: getCookie('_uc_utm_source'), uc_utm_term: getCookie('_uc_utm_term'), roistat_visit: getCookie('roistat_visit') };
      var amo_data = $.extend(data, dat);
      $.ajax({
        type: 'POST',
        url: 'https://apicrm.ru/amo/domain/more-spahotel.com/amocrm_api.php',
        data: amo_data,
      });
      /* /AMO.CRM */
      return false;
    });
  };
}

var form = new Form();

function maskedInput (container, mask) {
  mask = typeof (mask) !== 'undefined' ? mask : '+7 (999) 999-99-99';
  $('input[name=phone],input[name=orderDetails]', container).inputmask({
    mask: mask,
    showMaskOnHover: false,
    showMaskOnFocus: true
  });
}

function initSlick () {

  $('.slider-for').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    arrows: false,
    fade: true,
    asNavFor: '.slider-nav',
    infinite: false,
    draggable: false
  });
  $('.slider-nav').slick({
    slidesToShow: 4,
    slidesToScroll: 1,
    dots: false,
    asNavFor: '.slider-for',
    focusOnSelect: true,
    arrows: true,
    draggable: false,
    infinite: false,
    prevArrow: '<button class="prev" aria-label="Previous" type="button"><i class="icon icon-chevron-left"></i></button>',
    nextArrow: '<button class="next" aria-label="Next" type="button"><i class="icon icon-chevron-right"></i></button>',
    responsive: [
      {
        breakpoint: 1251,
        settings: {
          slidesToShow: 4,
        }
      },
      {
        breakpoint: 992,
        settings: {
          slidesToShow: 3,
          draggable: true,
        }
      },
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 2,
          draggable: true,
        }
      },
      {
        breakpoint: 451,
        settings: {
          slidesToShow: 1,
          draggable: true,
        }
      },
    ]
  });

  $('.room-view-slider').slick({
    arrows: true,
    prevArrow: '<button class="prev" aria-label="Previous" type="button"><i class="icon icon-chevron-left"></i></button>',
    nextArrow: '<button class="next" aria-label="Next" type="button"><i class="icon icon-chevron-right"></i></button>',
    autoplay: true,
    autoplaySpeed: 3000
  });
}

function getTabContent (categoryId) {

  if (typeof (window.tabsXHR) !== 'undefined' && window.tabsXHR !== null) {
    window.tabsXHR.abort();
  }

  if (categoryId) {

    var tabsUrl = '/tabs/' + categoryId;

    window.tabsXHR = $.ajax({
      url: tabsUrl,
      dataType: 'html',
      type: 'GET',
      timeout: 300000,
      success: function (data) {
        $('.rubricator-tabs').html(data);
        refreshPrice()
        initSlick();
      },

      error: function (jqXHR, textStatus) {
        console.log(textStatus + ' ' + jqXHR.status + ': ' + jqXHR.statusText);
      }

    });
  }
}

function initSlickRoomSlider () {
  $('.roomSlider__container__sliderContainer__block').slick({
    slidesToShow: 4,
    slidesToScroll: 1,
    dots: false,
    arrows: true,
    focusOnSelect: true,
    prevArrow: '<button class="prev" aria-label="Previous" type="button"><i class="icon icon-chevron-left"></i></button>',
    nextArrow: '<button class="next" aria-label="Next" type="button"><i class="icon icon-chevron-right"></i></button>',
    draggable: false,
    lazyLoad: true,
    infinite: true,
    responsive: [
      {
        breakpoint: 1250,
        settings: {
          draggable: true,
          variableWidth: true,
        }
      },
      {
        breakpoint: 1090,
        settings: {
          slidesToShow: 3,
          draggable: true,
          variableWidth: true,
        }
      },
      {
        breakpoint: 800,
        settings: {
          slidesToShow: 2,
          draggable: true,
          variableWidth: true,
        }
      },
      {
        breakpoint: 600,
        settings: {
          draggable: true,
          slidesToShow: 2,
          variableWidth: true,
        }
      },
      {
        breakpoint: 550,
        settings: {
          slidesToShow: 1,
          draggable: true,
          variableWidth: true,
        }
      },
    ]

  });
}

function initSlickRoomSliderVillaAndRooms () {
  $('.roomSlider__container__sliderContainer__block').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: false,
    arrows: false,
    focusOnSelect: true,
    asNavFor: '.villaAndRooms__roomSliderPhoto__container__sliderContainer__block__slideCategory',
    draggable: true,
    lazyLoad: true,
    infinite: false,
    variableWidth: true,

  });


  $('.villaAndRooms__roomSliderPhoto__container__sliderContainer__block__slideCategory').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    arrows: false,
    fade: true,
    infinite: false,
    focusOnSelect: false,
    draggable: false,
    asNavFor: '.roomSlider__container__sliderContainer__block',
    swipe: false

  });



  $('.villaAndRooms__roomSliderPhoto__container__sliderContainer__block__item__photoSlider').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: false,
    arrows: false,
    focusOnSelect: true,
    draggable: true,
    lazyLoad: true,
    infinite: true,
    variableWidth: true,
    autoplay: true,
    autoplaySpeed: 3000,
    centerMode: true,
  });
}

function getRoomSliderContent (categoryId) {

  if (typeof (window.tabsXHR) !== 'undefined' && window.tabsXHR !== null) {
    window.tabsXHR.abort();
  }

  var tabsUrl = '/roomSlider/' + categoryId;

  window.tabsXHR = $.ajax({
    url: tabsUrl,
    dataType: 'html',
    type: 'GET',
    timeout: 300000,
    success: function (data) {
      $('.rubricator-roomSlider').html(data);
      refreshPrice()
      initSlickRoomSlider();
    },

    error: function (jqXHR, textStatus) {
      console.log(textStatus + ' ' + jqXHR.status + ': ' + jqXHR.statusText);
    }

  });
}


function getRoomSliderContentVillaAndRooms (categoryId) {

  if (typeof (window.tabsXHR) !== 'undefined' && window.tabsXHR !== null) {
    window.tabsXHR.abort();
  }

  var tabsUrl = '/villaAndRooms/' + categoryId;

  window.tabsXHR = $.ajax({
    url: tabsUrl,
    dataType: 'html',
    type: 'GET',
    timeout: 300000,
    success: function (data) {
      $('.rubricator-villaAndRooms').html(data);
      refreshPrice()
      initSlickRoomSliderVillaAndRooms();
    },

    error: function (jqXHR, textStatus) {
      console.log(textStatus + ' ' + jqXHR.status + ': ' + jqXHR.statusText);
    }

  });
}


function isHighDensity () {
  if (window.matchMedia) {
    var mq = window.matchMedia('only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)');
    return (mq && mq.matches) || (window.devicePixelRatio && window.devicePixelRatio > 1);
  }
  return window.devicePixelRatio && window.devicePixelRatio > 1
}

$(document).ready(function ($) {

  var contactsForm = $('#contacts-form');
  maskedInput(contactsForm);
  form.manageForm(contactsForm, function () {
    contactsForm.find('.contacts-form-body').remove();
  });

  var winWidth = $(window).width(),
    highDensity = isHighDensity();

  maskedInput($('#prepayment-form'), '+79999999999');

  var subscribeForm = $('#subscribe-form');
  form.manageForm(subscribeForm, function () {
    subscribeForm.find('.contacts-form-body').remove();
  });

  var joinForm = $('#join-form'),
    joinPopup = $('.join-popup');
  form.manageForm(joinForm, function () {
    joinPopup.find('.popup-subtitle').remove();
    joinForm.find('.forms-fields').remove();
    setTimeout(function () {
      joinForm.parents('.popup').find('.popup-close').click();
    }, 5000);
  });
  maskedInput(joinForm);

  $('.join-btn').click(function () {
    $('.modal-backdrop').show();
    joinPopup.addClass('active');
    joinPopup.fadeIn()
      .css({ top: Math.max(($(window).height() - joinPopup.height()) / 2, 0) + 'px' });

    $('.popup-close, .modal-backdrop').click(function () {
      joinPopup.hide();
      $('.modal-backdrop').fadeOut();
    });
  });




  var newYearForm = $('#NewYearForm');
  maskedInput(newYearForm);
  form.manageForm(newYearForm, function () {
    newYearForm.remove();
  });

  var stackForm = $('#stackForm');
  maskedInput(stackForm);
  form.manageForm(stackForm, function () {
    stackForm.remove();
  });

  var extendedForm = $('#extendedForm');
  maskedInput(extendedForm);
  form.manageForm(extendedForm, function () {
    extendedForm.remove();
  });


  var feedbackForm = $('#feedback-form');
  maskedInput(feedbackForm);
  form.manageForm(feedbackForm, function () {
    feedbackForm.find('.feedback-form-body').remove();
  });

  // // cookie bar
  var cookieBarCookieKey = 'cbc',
    cookieBar = $('.cookie-bar');
  $('.cookie-close').click(function () {
    cookieBar.hide();
    setCookie(cookieBarCookieKey, '1', { expires: 365 * 24 * 3600, path: '/' });
  });

  if (!getCookie(cookieBarCookieKey)) {
    cookieBar.show();
  }

  var bookingForm = $('#booking-form'),
    bookingPopup = $('.booking-popup');
  form.manageForm(bookingForm, function () {
    bookingPopup.find('.popup-subtitle').remove();
    bookingForm.find('.forms-fields').remove();
    setTimeout(function () {
      bookingForm.parents('.popup').find('.popup-close').click();
    }, 5000);
  });
  maskedInput(bookingForm);

  $('.category-item').on('click', function () {
    console.log($(this).children('a').attr('href'));
    if ($(this).children('a').attr('href') !== 'javascript:') {
      return;
    }


    getTabContent($(this).data('id'));
    $(this)
      .addClass("active")
      .siblings()
      .removeClass("active");
  });







  $('.roomSlider ').on('click touchstart', function () {
    if ($(this).attr('href') !== 'javascript:') {
      return;
    }

    getRoomSliderContent($(this).data('id'));
    document.querySelectorAll('.roomSlider').forEach(e => {
      e.classList.remove('active')
    })
    $(this).addClass("active")

    $(".roomSlider__container__titleBlock__accordionContainer__block__accordionButton span").text($(this).text());

    getRoomSliderContent($(this).data('id'));
    document.querySelectorAll('.roomSlider').forEach(e => {
      e.classList.remove('active')
    })
    $(this).addClass("active")

    $(".roomSlider__container__titleBlock__accordionContainer__block__accordionButton span").text($(this).text());

  });


  $('.roomSlider ').on('click touchstart', function () {
    if ($(this).attr('href') !== 'javascript:') {
      return;
    }

    getRoomSliderContentVillaAndRooms($(this).data('id'));
    document.querySelectorAll('.roomSlider').forEach(e => {
      e.classList.remove('active')
    })
    $(this).addClass("active")

    $(".roomSlider__container__titleBlock__accordionContainer__block__accordionButton span").text($(this).text());

    getRoomSliderContentVillaAndRooms($(this).data('id'));
    document.querySelectorAll('.roomSlider').forEach(e => {
      e.classList.remove('active')
    })
    $(this).addClass("active")

    $(".roomSlider__container__titleBlock__accordionContainer__block__accordionButton span").text($(this).text());

  });

  // if (window.innerWidth <= 768) {

  //   $('.category__itemSelect__container').change(function () {

  //     if ($('option:selected', this).attr('data-id-url')) {
  //       window.location.href = $('option:selected', this).attr('data-id-url')
  //       return;
  //     }
  //     getTabContent($('option:selected', this).attr('data-id'));
  //   });
  // }
})
